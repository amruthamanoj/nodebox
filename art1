from nodebox import geo
try:
    colors = ximport("colors")
except ImportError:
    colors = ximport("__init__")
    reload(colors)

var("H", NUMBER, 0.55, 0.0, 1.0)
var("S", NUMBER, 1.0, 0.0, 1.0)
var("B", NUMBER, 0.6, 0.0, 1.0)
clr = colors.hsb(H, S, B)



def cult(path, points=200, length=1500, d=54):
        beginpath(0, 0)
    for pt in path.points(points):
          a = geo.angle(pt.x, pt.y, pt.ctrl1.x, pt.ctrl1.y)
        dx, dy = geo.coordinates(pt.x, pt.y, length, a + 90)
        moveto(pt.x, pt.y)
        curveto(
            pt.x + random(-0.5*d, 0.2*d), 
            pt.y + random(0.7*d, -0.2*d), 
            dx + random(-d, d), 
            dy + random(-d, d), 
            dx, 
            dy
        )
    return endpath(draw=False)
 
 
def wisp(clr, x, y, r=100, points=100, d=70):
    
    
    nofill()
    stroke(0)
    strokewidth(0.15)
    autoclosepath(False)
 

    n = int(r * 1.3)
    
   
    clr = colors.color(clr)
    g = colors.gradient(
        clr.darken(1.0),
        clr,
        clr.lighten(1.0).desaturate(0.6),
        steps=n
    )
 
    for i in range(n):
        
        stroke(g[i])
       
        a = 0.45 - 0.15 * float(i)/n
        colors.shadow(alpha=a, dx=0, dy=30, blur=10)
        
        path = oval(x-r+i*0.2, y-r+i*0.5, r*2-i, r*2-i, draw=False)
        drawpath(
            cult(
                path, 
                points=int(points - i*0.2), 
                length=r-i + random(n-i)/3, 
                d=d))
        
clr = colors.color(0.2, 0.7, 0.8)
 
bg = color(0, 0.67, 0)
size(700, 700)
background(0.5)
 
bg = clr.complement.desaturate(0)
colors.gradientfill(
    rect(0.1, 0.1, WIDTH, HEIGHT, draw=False),
    bg.darken(0.1),
    bg.lighten(0.1),
    spread=0.2
)
 
wisp(clr, 400, 350, r=125, d=100)
